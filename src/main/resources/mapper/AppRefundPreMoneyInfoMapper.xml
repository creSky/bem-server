<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bem.mapper.AppRefundPreMoneyInfoMapper">
  <resultMap id="BaseResultMap" type="com.bem.domain.AppRefundPreMoneyInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="APP_ID" jdbcType="VARCHAR" property="appId" />
    <result column="TASK_ID" jdbcType="VARCHAR" property="taskId" />
    <result column="SETTLEMENT_ID" jdbcType="BIGINT" property="settlementId" />
    <result column="SETTLEMENT_NO" jdbcType="VARCHAR" property="settlementNo" />
    <result column="SETTLEMENT_NAME" jdbcType="VARCHAR" property="settlementName" />
    <result column="APPLY_MAN" jdbcType="INTEGER" property="applyMan" />
    <result column="APPLY_DATE" jdbcType="TIMESTAMP" property="applyDate" />
    <result column="MAN_NAME" jdbcType="VARCHAR" property="manName" />
    <result column="MAN_PHONE" jdbcType="VARCHAR" property="manPhone" />
    <result column="PASS_MAN" jdbcType="INTEGER" property="passMan" />
    <result column="PASS_DATE" jdbcType="TIMESTAMP" property="passDate" />
    <result column="PASS_OPTION" jdbcType="INTEGER" property="passOption" />
    <result column="BACK_MONEY" jdbcType="DECIMAL" property="backMoney" />
    <result column="BACK_TYPE" jdbcType="INTEGER" property="backType" />
    <result column="BACK_REASON" jdbcType="VARCHAR" property="backReason" />
    <result column="PROCESS_INSTANCE_ID" jdbcType="DECIMAL" property="processInstanceId" />
    <result column="F_CHARGE_MODE" jdbcType="INTEGER" property="fChargeMode" />
    <result column="PRE_CHARGE" jdbcType="DECIMAL" property="preCharge" />
    <result column="IS_PAY" jdbcType="INTEGER" property="isPay" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    ID, APP_ID, TASK_ID, SETTLEMENT_ID, SETTLEMENT_NO, SETTLEMENT_NAME, APPLY_MAN, APPLY_DATE, 
    MAN_NAME, MAN_PHONE, PASS_MAN, PASS_DATE, PASS_OPTION, BACK_MONEY, BACK_TYPE, BACK_REASON, 
    PROCESS_INSTANCE_ID, F_CHARGE_MODE, PRE_CHARGE, IS_PAY
  </sql>
  <select id="selectByExample" parameterType="com.bem.domain.AppRefundPreMoneyInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from APP_REFUND_PRE_MONEY_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.bem.domain.AppRefundPreMoneyInfoExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from APP_REFUND_PRE_MONEY_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.bem.domain.AppRefundPreMoneyInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from APP_REFUND_PRE_MONEY_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update APP_REFUND_PRE_MONEY_INFO
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        APP_ID = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null">
        TASK_ID = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.settlementId != null">
        SETTLEMENT_ID = #{record.settlementId,jdbcType=BIGINT},
      </if>
      <if test="record.settlementNo != null">
        SETTLEMENT_NO = #{record.settlementNo,jdbcType=VARCHAR},
      </if>
      <if test="record.settlementName != null">
        SETTLEMENT_NAME = #{record.settlementName,jdbcType=VARCHAR},
      </if>
      <if test="record.applyMan != null">
        APPLY_MAN = #{record.applyMan,jdbcType=INTEGER},
      </if>
      <if test="record.applyDate != null">
        APPLY_DATE = #{record.applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.manName != null">
        MAN_NAME = #{record.manName,jdbcType=VARCHAR},
      </if>
      <if test="record.manPhone != null">
        MAN_PHONE = #{record.manPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.passMan != null">
        PASS_MAN = #{record.passMan,jdbcType=INTEGER},
      </if>
      <if test="record.passDate != null">
        PASS_DATE = #{record.passDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passOption != null">
        PASS_OPTION = #{record.passOption,jdbcType=INTEGER},
      </if>
      <if test="record.backMoney != null">
        BACK_MONEY = #{record.backMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.backType != null">
        BACK_TYPE = #{record.backType,jdbcType=INTEGER},
      </if>
      <if test="record.backReason != null">
        BACK_REASON = #{record.backReason,jdbcType=VARCHAR},
      </if>
      <if test="record.processInstanceId != null">
        PROCESS_INSTANCE_ID = #{record.processInstanceId,jdbcType=DECIMAL},
      </if>
      <if test="record.fChargeMode != null">
        F_CHARGE_MODE = #{record.fChargeMode,jdbcType=INTEGER},
      </if>
      <if test="record.preCharge != null">
        PRE_CHARGE = #{record.preCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.isPay != null">
        IS_PAY = #{record.isPay,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update APP_REFUND_PRE_MONEY_INFO
    set ID = #{record.id,jdbcType=BIGINT},
      APP_ID = #{record.appId,jdbcType=VARCHAR},
      TASK_ID = #{record.taskId,jdbcType=VARCHAR},
      SETTLEMENT_ID = #{record.settlementId,jdbcType=BIGINT},
      SETTLEMENT_NO = #{record.settlementNo,jdbcType=VARCHAR},
      SETTLEMENT_NAME = #{record.settlementName,jdbcType=VARCHAR},
      APPLY_MAN = #{record.applyMan,jdbcType=INTEGER},
      APPLY_DATE = #{record.applyDate,jdbcType=TIMESTAMP},
      MAN_NAME = #{record.manName,jdbcType=VARCHAR},
      MAN_PHONE = #{record.manPhone,jdbcType=VARCHAR},
      PASS_MAN = #{record.passMan,jdbcType=INTEGER},
      PASS_DATE = #{record.passDate,jdbcType=TIMESTAMP},
      PASS_OPTION = #{record.passOption,jdbcType=INTEGER},
      BACK_MONEY = #{record.backMoney,jdbcType=DECIMAL},
      BACK_TYPE = #{record.backType,jdbcType=INTEGER},
      BACK_REASON = #{record.backReason,jdbcType=VARCHAR},
      PROCESS_INSTANCE_ID = #{record.processInstanceId,jdbcType=DECIMAL},
      F_CHARGE_MODE = #{record.fChargeMode,jdbcType=INTEGER},
      PRE_CHARGE = #{record.preCharge,jdbcType=DECIMAL},
      IS_PAY = #{record.isPay,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>