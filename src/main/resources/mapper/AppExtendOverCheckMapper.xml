<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bem.mapper.AppExtendOverCheckMapper">
  <resultMap id="BaseResultMap" type="com.bem.domain.AppExtendOverCheck">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="APP_ID" jdbcType="BIGINT" property="appId" />
    <result column="CIVIL_DESIGN_CODE" jdbcType="VARCHAR" property="civilDesignCode" />
    <result column="CIVIL_CONST_CODE" jdbcType="VARCHAR" property="civilConstCode" />
    <result column="ENERGY_DESIGN_CODE" jdbcType="VARCHAR" property="energyDesignCode" />
    <result column="ENERGY_CONST_CODE" jdbcType="VARCHAR" property="energyConstCode" />
    <result column="SELF_TEST_RESULT" jdbcType="VARCHAR" property="selfTestResult" />
    <result column="SELF_TEST_DATE" jdbcType="DATE" property="selfTestDate" />
    <result column="CHECK_MAN" jdbcType="VARCHAR" property="checkMan" />
    <result column="APPLY_DATE" jdbcType="DATE" property="applyDate" />
    <result column="CHECK_DATE" jdbcType="DATE" property="checkDate" />
    <result column="CHECK_RESULT" jdbcType="VARCHAR" property="checkResult" />
    <result column="CONCLUSION" jdbcType="CHAR" property="conclusion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    ID, APP_ID, CIVIL_DESIGN_CODE, CIVIL_CONST_CODE, ENERGY_DESIGN_CODE, ENERGY_CONST_CODE, 
    SELF_TEST_RESULT, SELF_TEST_DATE, CHECK_MAN, APPLY_DATE, CHECK_DATE, CHECK_RESULT, 
    CONCLUSION
  </sql>
  <select id="selectByExample" parameterType="com.bem.domain.AppExtendOverCheckExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from APP_EXTEND_OVER_CHECK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.bem.domain.AppExtendOverCheckExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from APP_EXTEND_OVER_CHECK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.bem.domain.AppExtendOverCheckExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from APP_EXTEND_OVER_CHECK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update APP_EXTEND_OVER_CHECK
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        APP_ID = #{record.appId,jdbcType=BIGINT},
      </if>
      <if test="record.civilDesignCode != null">
        CIVIL_DESIGN_CODE = #{record.civilDesignCode,jdbcType=VARCHAR},
      </if>
      <if test="record.civilConstCode != null">
        CIVIL_CONST_CODE = #{record.civilConstCode,jdbcType=VARCHAR},
      </if>
      <if test="record.energyDesignCode != null">
        ENERGY_DESIGN_CODE = #{record.energyDesignCode,jdbcType=VARCHAR},
      </if>
      <if test="record.energyConstCode != null">
        ENERGY_CONST_CODE = #{record.energyConstCode,jdbcType=VARCHAR},
      </if>
      <if test="record.selfTestResult != null">
        SELF_TEST_RESULT = #{record.selfTestResult,jdbcType=VARCHAR},
      </if>
      <if test="record.selfTestDate != null">
        SELF_TEST_DATE = #{record.selfTestDate,jdbcType=DATE},
      </if>
      <if test="record.checkMan != null">
        CHECK_MAN = #{record.checkMan,jdbcType=VARCHAR},
      </if>
      <if test="record.applyDate != null">
        APPLY_DATE = #{record.applyDate,jdbcType=DATE},
      </if>
      <if test="record.checkDate != null">
        CHECK_DATE = #{record.checkDate,jdbcType=DATE},
      </if>
      <if test="record.checkResult != null">
        CHECK_RESULT = #{record.checkResult,jdbcType=VARCHAR},
      </if>
      <if test="record.conclusion != null">
        CONCLUSION = #{record.conclusion,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update APP_EXTEND_OVER_CHECK
    set ID = #{record.id,jdbcType=BIGINT},
      APP_ID = #{record.appId,jdbcType=BIGINT},
      CIVIL_DESIGN_CODE = #{record.civilDesignCode,jdbcType=VARCHAR},
      CIVIL_CONST_CODE = #{record.civilConstCode,jdbcType=VARCHAR},
      ENERGY_DESIGN_CODE = #{record.energyDesignCode,jdbcType=VARCHAR},
      ENERGY_CONST_CODE = #{record.energyConstCode,jdbcType=VARCHAR},
      SELF_TEST_RESULT = #{record.selfTestResult,jdbcType=VARCHAR},
      SELF_TEST_DATE = #{record.selfTestDate,jdbcType=DATE},
      CHECK_MAN = #{record.checkMan,jdbcType=VARCHAR},
      APPLY_DATE = #{record.applyDate,jdbcType=DATE},
      CHECK_DATE = #{record.checkDate,jdbcType=DATE},
      CHECK_RESULT = #{record.checkResult,jdbcType=VARCHAR},
      CONCLUSION = #{record.conclusion,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>