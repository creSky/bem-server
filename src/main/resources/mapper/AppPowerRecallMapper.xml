<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bem.mapper.AppPowerRecallMapper">
  <resultMap id="BaseResultMap" type="com.bem.domain.AppPowerRecall">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="APP_ID" jdbcType="VARCHAR" property="appId" />
    <result column="TASK_ID" jdbcType="INTEGER" property="taskId" />
    <result column="PROCESS_INSTANCE_ID" jdbcType="DECIMAL" property="processInstanceId" />
    <result column="USER_ID" jdbcType="BIGINT" property="userId" />
    <result column="USER_NO" jdbcType="VARCHAR" property="userNo" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="METER_ID" jdbcType="BIGINT" property="meterId" />
    <result column="METER_NO" jdbcType="VARCHAR" property="meterNo" />
    <result column="METER_ORDER" jdbcType="DECIMAL" property="meterOrder" />
    <result column="METER_NAME" jdbcType="VARCHAR" property="meterName" />
    <result column="WRITE_SECTION_ID" jdbcType="INTEGER" property="writeSectionId" />
    <result column="WRITE_SECT_NAME" jdbcType="VARCHAR" property="writeSectName" />
    <result column="METER_ASSETS_ID" jdbcType="BIGINT" property="meterAssetsId" />
    <result column="METER_ASSETS_NO" jdbcType="VARCHAR" property="meterAssetsNo" />
    <result column="FUNCTION_CODE" jdbcType="INTEGER" property="functionCode" />
    <result column="REASON_CODE" jdbcType="INTEGER" property="reasonCode" />
    <result column="RP_MON" jdbcType="DECIMAL" property="rpMon" />
    <result column="SHD_ADD_POWER" jdbcType="DECIMAL" property="shdAddPower" />
    <result column="IS_LINELOST" jdbcType="INTEGER" property="isLinelost" />
    <result column="TS_FLAG" jdbcType="INTEGER" property="tsFlag" />
    <result column="IS_COS" jdbcType="INTEGER" property="isCos" />
    <result column="APPLY_PERSON" jdbcType="VARCHAR" property="applyPerson" />
    <result column="APPLY_DATE" jdbcType="TIMESTAMP" property="applyDate" />
    <result column="APPLY_REASON" jdbcType="VARCHAR" property="applyReason" />
    <result column="PASS_PERSON" jdbcType="VARCHAR" property="passPerson" />
    <result column="PASS_DATE" jdbcType="TIMESTAMP" property="passDate" />
    <result column="MON" jdbcType="DECIMAL" property="mon" />
    <result column="MON_SN" jdbcType="DECIMAL" property="monSn" />
    <result column="ACTIVE_WRITE_POWER_1" jdbcType="DECIMAL" property="activeWritePower1" />
    <result column="ACTIVE_WRITE_POWER_2" jdbcType="DECIMAL" property="activeWritePower2" />
    <result column="ACTIVE_WRITE_POWER_3" jdbcType="DECIMAL" property="activeWritePower3" />
    <result column="ACTIVE_WRITE_POWER_4" jdbcType="DECIMAL" property="activeWritePower4" />
    <result column="POWER_DIRECTION" jdbcType="INTEGER" property="powerDirection" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    ID, APP_ID, TASK_ID, PROCESS_INSTANCE_ID, USER_ID, USER_NO, USER_NAME, METER_ID, 
    METER_NO, METER_ORDER, METER_NAME, WRITE_SECTION_ID, WRITE_SECT_NAME, METER_ASSETS_ID, 
    METER_ASSETS_NO, FUNCTION_CODE, REASON_CODE, RP_MON, SHD_ADD_POWER, IS_LINELOST, 
    TS_FLAG, IS_COS, APPLY_PERSON, APPLY_DATE, APPLY_REASON, PASS_PERSON, PASS_DATE, 
    MON, MON_SN, ACTIVE_WRITE_POWER_1, ACTIVE_WRITE_POWER_2, ACTIVE_WRITE_POWER_3, ACTIVE_WRITE_POWER_4, 
    POWER_DIRECTION
  </sql>
  <select id="selectByExample" parameterType="com.bem.domain.AppPowerRecallExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from APP_POWER_RECALL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.bem.domain.AppPowerRecallExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from APP_POWER_RECALL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.bem.domain.AppPowerRecallExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from APP_POWER_RECALL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update APP_POWER_RECALL
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        APP_ID = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null">
        TASK_ID = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.processInstanceId != null">
        PROCESS_INSTANCE_ID = #{record.processInstanceId,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userNo != null">
        USER_NO = #{record.userNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.meterId != null">
        METER_ID = #{record.meterId,jdbcType=BIGINT},
      </if>
      <if test="record.meterNo != null">
        METER_NO = #{record.meterNo,jdbcType=VARCHAR},
      </if>
      <if test="record.meterOrder != null">
        METER_ORDER = #{record.meterOrder,jdbcType=DECIMAL},
      </if>
      <if test="record.meterName != null">
        METER_NAME = #{record.meterName,jdbcType=VARCHAR},
      </if>
      <if test="record.writeSectionId != null">
        WRITE_SECTION_ID = #{record.writeSectionId,jdbcType=INTEGER},
      </if>
      <if test="record.writeSectName != null">
        WRITE_SECT_NAME = #{record.writeSectName,jdbcType=VARCHAR},
      </if>
      <if test="record.meterAssetsId != null">
        METER_ASSETS_ID = #{record.meterAssetsId,jdbcType=BIGINT},
      </if>
      <if test="record.meterAssetsNo != null">
        METER_ASSETS_NO = #{record.meterAssetsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.functionCode != null">
        FUNCTION_CODE = #{record.functionCode,jdbcType=INTEGER},
      </if>
      <if test="record.reasonCode != null">
        REASON_CODE = #{record.reasonCode,jdbcType=INTEGER},
      </if>
      <if test="record.rpMon != null">
        RP_MON = #{record.rpMon,jdbcType=DECIMAL},
      </if>
      <if test="record.shdAddPower != null">
        SHD_ADD_POWER = #{record.shdAddPower,jdbcType=DECIMAL},
      </if>
      <if test="record.isLinelost != null">
        IS_LINELOST = #{record.isLinelost,jdbcType=INTEGER},
      </if>
      <if test="record.tsFlag != null">
        TS_FLAG = #{record.tsFlag,jdbcType=INTEGER},
      </if>
      <if test="record.isCos != null">
        IS_COS = #{record.isCos,jdbcType=INTEGER},
      </if>
      <if test="record.applyPerson != null">
        APPLY_PERSON = #{record.applyPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.applyDate != null">
        APPLY_DATE = #{record.applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.applyReason != null">
        APPLY_REASON = #{record.applyReason,jdbcType=VARCHAR},
      </if>
      <if test="record.passPerson != null">
        PASS_PERSON = #{record.passPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.passDate != null">
        PASS_DATE = #{record.passDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mon != null">
        MON = #{record.mon,jdbcType=DECIMAL},
      </if>
      <if test="record.monSn != null">
        MON_SN = #{record.monSn,jdbcType=DECIMAL},
      </if>
      <if test="record.activeWritePower1 != null">
        ACTIVE_WRITE_POWER_1 = #{record.activeWritePower1,jdbcType=DECIMAL},
      </if>
      <if test="record.activeWritePower2 != null">
        ACTIVE_WRITE_POWER_2 = #{record.activeWritePower2,jdbcType=DECIMAL},
      </if>
      <if test="record.activeWritePower3 != null">
        ACTIVE_WRITE_POWER_3 = #{record.activeWritePower3,jdbcType=DECIMAL},
      </if>
      <if test="record.activeWritePower4 != null">
        ACTIVE_WRITE_POWER_4 = #{record.activeWritePower4,jdbcType=DECIMAL},
      </if>
      <if test="record.powerDirection != null">
        POWER_DIRECTION = #{record.powerDirection,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update APP_POWER_RECALL
    set ID = #{record.id,jdbcType=BIGINT},
      APP_ID = #{record.appId,jdbcType=VARCHAR},
      TASK_ID = #{record.taskId,jdbcType=INTEGER},
      PROCESS_INSTANCE_ID = #{record.processInstanceId,jdbcType=DECIMAL},
      USER_ID = #{record.userId,jdbcType=BIGINT},
      USER_NO = #{record.userNo,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      METER_ID = #{record.meterId,jdbcType=BIGINT},
      METER_NO = #{record.meterNo,jdbcType=VARCHAR},
      METER_ORDER = #{record.meterOrder,jdbcType=DECIMAL},
      METER_NAME = #{record.meterName,jdbcType=VARCHAR},
      WRITE_SECTION_ID = #{record.writeSectionId,jdbcType=INTEGER},
      WRITE_SECT_NAME = #{record.writeSectName,jdbcType=VARCHAR},
      METER_ASSETS_ID = #{record.meterAssetsId,jdbcType=BIGINT},
      METER_ASSETS_NO = #{record.meterAssetsNo,jdbcType=VARCHAR},
      FUNCTION_CODE = #{record.functionCode,jdbcType=INTEGER},
      REASON_CODE = #{record.reasonCode,jdbcType=INTEGER},
      RP_MON = #{record.rpMon,jdbcType=DECIMAL},
      SHD_ADD_POWER = #{record.shdAddPower,jdbcType=DECIMAL},
      IS_LINELOST = #{record.isLinelost,jdbcType=INTEGER},
      TS_FLAG = #{record.tsFlag,jdbcType=INTEGER},
      IS_COS = #{record.isCos,jdbcType=INTEGER},
      APPLY_PERSON = #{record.applyPerson,jdbcType=VARCHAR},
      APPLY_DATE = #{record.applyDate,jdbcType=TIMESTAMP},
      APPLY_REASON = #{record.applyReason,jdbcType=VARCHAR},
      PASS_PERSON = #{record.passPerson,jdbcType=VARCHAR},
      PASS_DATE = #{record.passDate,jdbcType=TIMESTAMP},
      MON = #{record.mon,jdbcType=DECIMAL},
      MON_SN = #{record.monSn,jdbcType=DECIMAL},
      ACTIVE_WRITE_POWER_1 = #{record.activeWritePower1,jdbcType=DECIMAL},
      ACTIVE_WRITE_POWER_2 = #{record.activeWritePower2,jdbcType=DECIMAL},
      ACTIVE_WRITE_POWER_3 = #{record.activeWritePower3,jdbcType=DECIMAL},
      ACTIVE_WRITE_POWER_4 = #{record.activeWritePower4,jdbcType=DECIMAL},
      POWER_DIRECTION = #{record.powerDirection,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>